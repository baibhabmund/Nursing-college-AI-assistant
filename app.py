import gradio as gr
from rapidfuzz import fuzz

positive_responses = ["haan", "yes", "sure", "okay", "ya", "yup", "yeah", "h"]
negative_responses = ["nahi", "no", "nope", "nah", "not interested", "n"]

contact_info = (
    "ЁЯУЮ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ / Contact Official:\n"
    "Mr. Baibhab Mund тАУ +91 8984020445\n"
    "Email: baibhab.mund20@gmail.com"
)

# Fuzzy matcher for yes/no
def match_intent(user_input, intent_list, threshold=80):
    return any(fuzz.ratio(user_input.lower().strip(), opt) >= threshold for opt in intent_list)

# Core logic
def process_input(user_input, chat_history, current_state, disabled):
    user_input_clean = user_input.strip().lower()
    response = ""

    if disabled:
        return "", chat_history, current_state, True

    # Match user intent
    if match_intent(user_input_clean, positive_responses):
        user_intent = "yes"
    elif match_intent(user_input_clean, negative_responses):
        user_intent = "no"
    else:
        user_intent = "unknown"

    # Chat states
    if current_state == "greeting":
        if user_intent == "no":
            response = "рдХреЛрдИ рдмрд╛рдд рдирд╣реАрдВред рдЕрдЧрд░ рднрд╡рд┐рд╖реНрдп рдореЗрдВ рд╕рд╣рд╛рдпрддрд╛ рдЪрд╛рд╣рд┐рдП рд╣реЛ рддреЛ рд╣рдорд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред\nNo problem! Feel free to reach out anytime."
            current_state = "ended"
            disabled = True
        elif user_intent == "yes":
            response = "рдХреНрдпрд╛ рдЖрдкрдиреЗ 12рд╡реАрдВ рдореЗрдВ рдмрд╛рдпреЛрд▓реЙрдЬреА рдкрдврд╝реА рд╣реИ?\nHave you studied Biology in 12th grade?"
            current_state = "asked_biology"
        else:
            response = "рдореИрдВ рд╕рдордЭ рдЧрдпрд╛ред рдХреНрдпрд╛ рдЖрдк рдХрд┐рд╕реА рдЕрдзрд┐рдХрд╛рд░реА рд╕реЗ рдмрд╛рдд рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\nI understand. Would you like to speak to an official?"
            current_state = "offer_contact"

    elif current_state == "asked_biology":
        if user_intent == "yes":
            response = (
                "B.Sc рдирд░реНрд╕рд┐рдВрдЧ рдПрдХ рдкреВрд░реНрдгрдХрд╛рд▓рд┐рдХ рдХреЛрд░реНрд╕ рд╣реИ рдЬреЛ рдЖрдкрдХреЛ рд╣реЗрд▓реНрдердХреЗрдпрд░ рдореЗрдВ рдЙрдЬреНрдЬреНрд╡рд▓ рдХрд░рд┐рдпрд░ рджреЗрддрд╛ рд╣реИред\n"
                "B.Sc Nursing is a full-time program offering a great career in healthcare.\n"
                "рдХреНрдпрд╛ рдЖрдк рдЗрд╕ рдХреЛрд░реНрд╕ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдФрд░ рдЬрд╛рдирдХрд╛рд░реА рдЪрд╛рд╣реЗрдВрдЧреЗ?\nWould you like more information about the program?"
            )
            current_state = "explained_program"
        else:
            response = (
                "B.Sc рдирд░реНрд╕рд┐рдВрдЧ рдореЗрдВ рдПрдбрдорд┐рд╢рди рдХреЗ рд▓рд┐рдП рдмрд╛рдпреЛрд▓реЙрдЬреА рдЕрдирд┐рд╡рд╛рд░реНрдп рд╣реИред\n"
                "Biology is mandatory for B.Sc Nursing admission.\n"
                "рдХреНрдпрд╛ рдЖрдк рдХреБрдЫ рдФрд░ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\nWould you like to know anything else?"
            )
            current_state = "asked_anything_else"

    elif current_state == "explained_program":
        if user_intent == "yes":
            response = (
                "ЁЯТ░ рдлреАрд╕ рд╡рд┐рд╡рд░рдг / Fee Details:\n"
                "- рдЯреНрдпреВрд╢рди рдлреАрд╕ / Tuition Fee: тВ╣60,000\n"
                "- рдмрд╕ рдлреАрд╕ / Bus Fee: тВ╣10,000\n"
                "- рдХреБрд▓ рд╡рд╛рд░реНрд╖рд┐рдХ рдлреАрд╕ / Total Annual Fee: тВ╣70,000\n"
                "тЮд рдХрд┐рд╢реНрддреЛрдВ рдореЗрдВ рднреБрдЧрддрд╛рди / Installments:\n"
                "- тВ╣30,000 (рдкреНрд░рд╡реЗрд╢ рдХреЗ рд╕рдордп / at admission)\n"
                "- тВ╣20,000 (рдкрд╣рд▓реЗ рд╕реЗрдореЗрд╕реНрдЯрд░ рдХреЗ рдмрд╛рдж / after 1st semester)\n"
                "- тВ╣20,000 (рджреВрд╕рд░реЗ рд╕реЗрдореЗрд╕реНрдЯрд░ рдХреЗ рдмрд╛рдж / after 2nd semester)\n\n"
                "ЁЯПа рд╣реЙрд╕реНрдЯрд▓ рд╕реБрд╡рд┐рдзрд╛рдПрдБ / Hostel Facilities:\n"
                "- 24x7 рдкрд╛рдиреА рдФрд░ рдмрд┐рдЬрд▓реА\n- CCTV рд╕реБрд░рдХреНрд╖рд╛\n- рдСрди-рд╕рд╛рдЗрдЯ рд╡рд╛рд░реНрдбрди\n"
                "ЁЯй║ рд╣реЙрд╕реНрдкрд┐рдЯрд▓ рдкреНрд░рд╢рд┐рдХреНрд╖рдг / Hospital Training:\n"
                "- рдЕрд╕рд▓реА рдорд░реАрдЬрд╝реЛрдВ рдХреЗ рд╕рд╛рде рдкреНрд░рд╢рд┐рдХреНрд╖рдгред\n"
                "рдХреЙрд▓реЗрдЬ рджрд┐рд▓реНрд▓реА рдореЗрдВ рд╕реНрдерд┐рдд рд╣реИред\nLocated in Delhi.\n"
                "рдХреНрдпрд╛ рдЖрдк рдЯреНрд░реЗрдирд┐рдВрдЧ рдпрд╛ рд▓реЛрдХреЗрд╢рди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\nWould you like to know about training or location?"
            )
            current_state = "asked_more_info"
        else:
            response = "рдареАрдХ рд╣реИред рдХреНрдпрд╛ рдЖрдк рдХреБрдЫ рдФрд░ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\nAlright. Would you like to know anything else?"
            current_state = "asked_anything_else"

    elif current_state == "asked_more_info":
        if user_intent == "yes":
            response = (
                "ЁЯУН рдЯреНрд░реЗрдирд┐рдВрдЧ рд╕реНрдерд╛рди / Clinical Training Locations:\n"
                "- рдЬрд┐рд▓рд╛ рдЕрд╕реНрдкрддрд╛рд▓ / District Hospital (Backundpur)\n"
                "- CHCs\n"
                "- рд░реАрдЬрдирд▓ рд╣реЙрд╕реНрдкрд┐рдЯрд▓ / Regional Hospital (Chartha)\n"
                "- Ranchi Neurosurgery\n\n"
                "ЁЯОУ рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ / Scholarships:\n"
                "- рдкреЛрд╕реНрдЯ-рдореИрдЯреНрд░рд┐рдХ тВ╣18kтАУтВ╣23k\n"
                "- рд▓реЗрдмрд░ рдордВрддреНрд░рд╛рд▓рдп тВ╣40kтАУтВ╣48k (рд▓реЗрдмрд░ рд░рдЬрд┐рд╕реНрдЯреНрд░реЗрд╢рди рдЬрд╝рд░реВрд░реА)\n"
                "ЁЯФв рд╕реАрдЯреЗрдВ / Total Seats: 60\n"
                "ЁЯУЛ рдкрд╛рддреНрд░рддрд╛ / Eligibility:\n- рдмрд╛рдпреЛрд▓реЙрдЬреА 12рд╡реАрдВ рдореЗрдВ\n- PNT рдкрд╛рд╕\n- рдЙрдореНрд░: 17-35\n\n"
                "рдХреНрдпрд╛ рдЖрдк рдХреБрдЫ рдФрд░ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\nWould you like to know anything else?"
            )
            current_state = "asked_anything_else"
        else:
            response = "рдареАрдХ рд╣реИред рдХреНрдпрд╛ рдЖрдк рдХреБрдЫ рдФрд░ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\nAlright. Would you like to know anything else?"
            current_state = "asked_anything_else"

    elif current_state == "asked_anything_else":
        if user_intent == "yes":
            response = contact_info + "\n\nрдЖрдкрдХрд╛ рджрд┐рди рд╢реБрдн рд╣реЛ! ЁЯШК\nHave a great day!"
            current_state = "ended"
            disabled = True
        elif user_intent == "no":
            response = "рдзрдиреНрдпрд╡рд╛рдж! рд╢реБрднрдХрд╛рдордирд╛рдПрдВред ЁЯШК\nThank you! All the best.\n\nЁЯФБ 'Restart' рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ рджреЛрдмрд╛рд░рд╛ рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдПред"
            current_state = "ended"
            disabled = True
        else:
            response = "рдореИрдВ рд╕рдордЭ рдЧрдпрд╛ред рдХреНрдпрд╛ рдЖрдк рдХрд┐рд╕реА рдЕрдзрд┐рдХрд╛рд░реА рд╕реЗ рдмрд╛рдд рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\nI understand. Would you like to speak to an official?"
            current_state = "offer_contact"

    elif current_state == "offer_contact":
        if user_intent == "yes":
            response = contact_info + "\n\nрдЖрдкрдХрд╛ рджрд┐рди рд╢реБрдн рд╣реЛ! ЁЯШК\nHave a great day!"
            current_state = "ended"
            disabled = True
        elif user_intent == "no":
            response = "рдареАрдХ рд╣реИ! рдзрдиреНрдпрд╡рд╛рджред ЁЯШК\nOkay! Thank you.\n\nЁЯФБ 'Restart' рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ рджреЛрдмрд╛рд░рд╛ рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдПред"
            current_state = "ended"
            disabled = True
        else:
            response = "рдареАрдХ рд╕реЗ рдирд╣реАрдВ рд╕рдордЭрд╛ред рдХреНрдпрд╛ рдЖрдк рдХрд┐рд╕реА рдЕрдзрд┐рдХрд╛рд░реА рд╕реЗ рдмрд╛рдд рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\nI didnтАЩt understand. Would you like to speak to an official?"

    else:
        response = "рдореИрдВ рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдБред рдХреНрдпрд╛ рдЖрдк рдирд░реНрд╕рд┐рдВрдЧ рдХреЙрд▓реЗрдЬ рдореЗрдВ рдПрдбрдорд┐рд╢рди рд▓реЗрдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?\nI am here to help you. Would you like to take admission in the Nursing College?"
        current_state = "greeting"

    chat_history.append({"role": "user", "content": user_input})
    chat_history.append({"role": "assistant", "content": response})
    return "", chat_history, current_state, disabled

# Restart function
def restart_chat():
    chat_history = [
        {"role": "assistant", "content": "рдореИрдВ рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдБред рдХреНрдпрд╛ рдЖрдк рдирд░реНрд╕рд┐рдВрдЧ рдХреЙрд▓реЗрдЬ рдореЗрдВ рдПрдбрдорд┐рд╢рди рд▓реЗрдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?\nI am here to help you. Would you like to take admission in the Nursing College?"}
    ]
    return "", chat_history, "greeting", False

# Gradio UI
with gr.Blocks(title="Nursing Admission Chatbot") as demo:
    gr.Markdown("## ЁЯПе Nursing Admission AI Assistant")
    chatbot = gr.Chatbot(label="Chat", type="messages")
    msg = gr.Textbox(placeholder="Type your answer here...", show_label=False)
    history = gr.State([])
    state = gr.State("greeting")
    disabled = gr.State(False)
    restart_btn = gr.Button("ЁЯФБ Restart", visible=False)

    def wrapper(message, hist, s, d):
        new_msg, new_hist, new_state, new_disabled = process_input(message, hist, s, d)
        return new_msg, new_hist, new_state, new_disabled, gr.update(visible=new_disabled)

    msg.submit(wrapper, [msg, history, state, disabled], [msg, chatbot, state, disabled, restart_btn])
    restart_btn.click(fn=restart_chat, outputs=[msg, chatbot, state, disabled])
    demo.load(fn=restart_chat, outputs=[msg, chatbot, state, disabled])

# тЬЕ Required for Hugging Face deployment
demo.launch()
